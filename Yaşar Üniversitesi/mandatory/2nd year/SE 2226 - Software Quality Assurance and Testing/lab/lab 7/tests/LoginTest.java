package week7;// Generated by Selenium IDE
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.AfterAll;
import static org.junit.jupiter.api.Assertions.assertEquals;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeOptions;

import java.util.*;

public class LoginTest {
  private static WebDriver driver;
  private static Map<String, Object> vars;
  static JavascriptExecutor js;
  @BeforeAll
  public static void setUp() {
    ChromeOptions options = new ChromeOptions();
    options.addArguments("--whitelisted-ips=''");
    options.addArguments("--remote-allow-origins=*");
    driver = new ChromeDriver(options);
    js = (JavascriptExecutor) driver;
    vars = new HashMap<>();
  }
  @AfterAll
  public static void tearDown() {
    driver.quit();
  }
  @Test
  public void login() {
    // Test name: Login
    // Step # | name | target | value
    // 1 | open | https://online.yasar.edu.tr/login/auth.php | 
    driver.get("https://online.yasar.edu.tr/login/auth.php");
    // 2 | setWindowSize | 1236x1160 |
    driver.manage().window().setSize(new Dimension(1236, 1160));
    // 3 | click | id=username |
    try {
      Thread.sleep(5000);
    } catch (InterruptedException e) {
      throw new RuntimeException(e);
    }
    driver.findElement(By.id("username")).click();
    // 4 | type | id=username | atabaris.ayaydin
    driver.findElement(By.id("username")).sendKeys("atabaris.ayaydin");
    // 5 | click | id=password | 
    driver.findElement(By.id("password")).click();
    // 6 | type | id=password | 123qweasdzxc
    driver.findElement(By.id("password")).sendKeys("123qweasdzxc");
    // 7 | click | id=loginbtn | 
    driver.findElement(By.id("loginbtn")).click();
    try {
      Thread.sleep(5000);
    } catch (InterruptedException e) {
      throw new RuntimeException(e);
    }
    // 8 | assertAlert | Kullanıcı adı veya şifre hatalı | 
    assertEquals(driver.switchTo().alert().getText(), "Kullanıcı adı veya şifre hatalı");
    try {
      Thread.sleep(5000);
    } catch (InterruptedException e) {
      throw new RuntimeException(e);
    }
  }
}
